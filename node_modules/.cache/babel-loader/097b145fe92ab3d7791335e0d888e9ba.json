{"ast":null,"code":"var _jsxFileName = \"C:\\\\take-home-frontend\\\\src\\\\components\\\\GifRandom.js\";\nimport React, { Component } from 'react';\nimport ExpandableGif from '../components/ExpandableGif';\nimport '../stylesheets/GifRandom.css';\n/*\r\n* \r\n*/\n\nclass GifRandom extends Component {\n  constructor() {\n    super();\n    this.state = {\n      randoms: [],\n      rating: 'g',\n      maxRandom: 20\n    };\n  }\n  /*\r\n  *  Random Gifs according to Rating \r\n  */\n\n\n  componentWillMount() {\n    const path = 'https://api.giphy.com/v1/gifs/random?api_key=20RpuHkJdS4eOEQg5OOBjQNSqLAnzgmP&q=' + this.state.rating;\n    let i = 0;\n    let randoms = [];\n\n    while (i < this.state.maxRandom) {\n      fetch(path).then(results => {\n        return results.json();\n      }).then(data => {\n        console.log(data.data);\n        randoms.push(data.data);\n      });\n      i++;\n    }\n\n    this.setState({\n      randoms: randoms\n    });\n  }\n\n  randomsToExpandable() {\n    return this.state.randoms.map(pic => {\n      return React.createElement(ExpandableGif, {\n        key: pic.id,\n        handleShareButton: this.props.handleShareButton,\n        horizontal_trending: this.props.horizontal_trending,\n        pic: pic,\n        handleActiveGif: this.props.handleActiveGif,\n        handleInfoButton: this.props.handleInfoButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    if (this.props.active_gif !== null) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.randomsToExpandable());\n  }\n\n}\n\nexport default GifRandom;","map":{"version":3,"sources":["C:\\take-home-frontend\\src\\components\\GifRandom.js"],"names":["React","Component","ExpandableGif","GifRandom","constructor","state","randoms","rating","maxRandom","componentWillMount","path","i","fetch","then","results","json","data","console","log","push","setState","randomsToExpandable","map","pic","id","props","handleShareButton","horizontal_trending","handleActiveGif","handleInfoButton","render","active_gif"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,8BAAP;AAEA;;;;AAGA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAEjCG,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE,EADG;AAEZC,MAAAA,MAAM,EAAE,GAFI;AAGZC,MAAAA,SAAS,EAAE;AAHC,KAAb;AAKA;AAED;;;;;AAGAC,EAAAA,kBAAkB,GAAG;AACpB,UAAMC,IAAI,GAAG,qFAAqF,KAAKL,KAAL,CAAWE,MAA7G;AACG,QAAII,CAAC,GAAG,CAAR;AACA,QAAIL,OAAO,GAAG,EAAd;;AACA,WAAOK,CAAC,GAAG,KAAKN,KAAL,CAAWG,SAAtB,EAAkC;AACjCI,MAAAA,KAAK,CAACF,IAAD,CAAL,CACFG,IADE,CACGC,OAAO,IAAG;AACf,eAAOA,OAAO,CAACC,IAAR,EAAP;AACA,OAHE,EAGAF,IAHA,CAGKG,IAAI,IAAG;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAjB;AACAV,QAAAA,OAAO,CAACa,IAAR,CAAaH,IAAI,CAACA,IAAlB;AACA,OANE;AAOHL,MAAAA,CAAC;AACE;;AACD,SAAKS,QAAL,CAAc;AACbd,MAAAA,OAAO,EAAEA;AADI,KAAd;AAGH;;AAEDe,EAAAA,mBAAmB,GAAE;AACpB,WAAO,KAAKhB,KAAL,CAAWC,OAAX,CAAmBgB,GAAnB,CAAwBC,GAAD,IAAO;AACpC,aAAQ,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAEA,GAAG,CAACC,EAAxB;AAA4B,QAAA,iBAAiB,EAAE,KAAKC,KAAL,CAAWC,iBAA1D;AAA6E,QAAA,mBAAmB,EAAE,KAAKD,KAAL,CAAWE,mBAA7G;AAAkI,QAAA,GAAG,EAAEJ,GAAvI;AAA4I,QAAA,eAAe,EAAE,KAAKE,KAAL,CAAWG,eAAxK;AAAyL,QAAA,gBAAgB,EAAE,KAAKH,KAAL,CAAWI,gBAAtN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACA,KAFM,CAAP;AAGA;;AAEDC,EAAAA,MAAM,GAAG;AACR,QAAI,KAAKL,KAAL,CAAWM,UAAX,KAA0B,IAA9B,EAAoC;AACnC,aAAO,IAAP;AACA;;AAED,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKV,mBAAL,EADD,CADD;AAKA;;AAjDgC;;AAoDlC,eAAelB,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ExpandableGif from '../components/ExpandableGif';\r\nimport '../stylesheets/GifRandom.css';\r\n\r\n/*\r\n* \r\n*/\r\nclass GifRandom extends Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\trandoms: [],\r\n\t\t\trating: 'g',\r\n\t\t\tmaxRandom: 20,\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*  Random Gifs according to Rating \r\n\t*/\r\n\tcomponentWillMount() {\r\n\t\tconst path = 'https://api.giphy.com/v1/gifs/random?api_key=20RpuHkJdS4eOEQg5OOBjQNSqLAnzgmP&q=' + this.state.rating;\r\n\t    let i = 0;\r\n\t    let randoms = [];\r\n\t    while( i < this.state.maxRandom ) {\r\n\t    \tfetch(path)\r\n\t\t\t.then(results =>{\r\n\t\t\t\treturn results.json();\r\n\t\t\t}).then(data=> {\r\n\t\t\t\tconsole.log(data.data);\r\n\t\t\t\trandoms.push(data.data);\r\n\t\t\t});\r\n\t\t\ti++;\r\n\t    }\r\n\t    this.setState({\r\n\t    \trandoms: randoms,\r\n\t    });\r\n\t}\r\n\r\n\trandomsToExpandable(){\r\n\t\treturn this.state.randoms.map((pic)=>{\r\n\t\t\treturn (<ExpandableGif key={pic.id} handleShareButton={this.props.handleShareButton} horizontal_trending={this.props.horizontal_trending} pic={pic} handleActiveGif={this.props.handleActiveGif} handleInfoButton={this.props.handleInfoButton}/>);\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.props.active_gif !== null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t{this.randomsToExpandable()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GifRandom;\r\n"]},"metadata":{},"sourceType":"module"}