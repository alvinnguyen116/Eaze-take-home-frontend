{"ast":null,"code":"var _jsxFileName = \"C:\\\\take-home-frontend\\\\src\\\\components\\\\Giphy.js\";\nimport React, { Component } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport MainContent from '../components/MainContent';\nimport Logo from '../components/Logo';\nimport '../stylesheets/Giphy.css';\n/*\r\n* Main Page of Giphy App \r\n*/\n\nclass Giphy extends Component {\n  constructor() {\n    super();\n    this.state = {\n      trending_visible: true,\n      active_gif: null,\n      search_content: [],\n      randoms: [],\n      active_title: '',\n      api_key: 'ewnfHypctYT5Bn4nXkQpC9ebtdX9dDBG'\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setMainState = this.setMainState.bind(this);\n    this.handleActiveGif = this.handleActiveGif.bind(this);\n    this.setRandoms = this.setRandoms.bind(this);\n  }\n\n  getRandom() {\n    var randomWords = require('random-words');\n\n    return randomWords();\n  }\n  /*\r\n  *  Search Endpoint with random string and rating \r\n  */\n\n\n  setRandoms(is_gif, is_new) {\n    /*\r\n    * Selects a random word \r\n    */\n    let random_word = '';\n\n    if (is_new === true) {\n      random_word = this.getRandom();\n    }\n\n    let path = 'https://api.giphy.com/v1/'; // console.log('this.state.is_gif', this.state.is_gif)\n\n    if (is_gif === true) {\n      path += 'gifs';\n    } else {\n      path += 'stickers';\n    }\n\n    path += '/search?api_key=' + this.state.api_key;\n    path += '&q=' + random_word; // path += '&rating=' + this.state.rating;\n    // console.log('path', path)\n\n    fetch(path, {\n      mode: 'cors'\n    }).then(results => {\n      return results.json();\n    }).then(data => {\n      this.setState({\n        active_title: random_word,\n        randoms: data.data\n      });\n    });\n  }\n  /*\r\n  * Handle Submit for Search \r\n  */\n\n\n  handleSubmit(str, is_gif) {\n    const api_key = this.state.api_key;\n    let path = 'https://api.giphy.com/v1/';\n\n    if (is_gif === true) {\n      path += 'gifs';\n    } else {\n      path += 'stickers';\n    }\n\n    path += '/search?api_key=' + api_key + '&q=';\n    fetch(path + str).then(results => {\n      return results.json();\n    }).then(data => {\n      this.setState({\n        trending_visible: false,\n        search_content: data.data\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.setRandoms(true, true);\n  }\n  /*\r\n  * Sets active_gif in Giphy to a GIF object \r\n  */\n\n\n  handleActiveGif(pic) {\n    this.setState({\n      active_gif: pic,\n      active_title: this.titleToSearchable(pic),\n      trending_visible: false\n    });\n  }\n  /*\r\n  * Convert Active Gif to a searchable Title \r\n  */\n\n\n  titleToSearchable(pic) {\n    let title = pic.title.toLowerCase().trim();\n\n    if (title === '') {\n      console.log('slug');\n      let slug = pic.slug.toLowerCase().trim().split('-');\n      slug = slug.filter(function (str) {\n        return !/\\d/.test(str);\n      });\n\n      if (slug.length === 1) {\n        console.log('username', pic.username);\n        return pic.username;\n      }\n\n      console.log('slug', slug.join(' '));\n      return slug.join(' ');\n    }\n\n    let title_arr = title.split(\" \");\n    console.log('title', title_arr.slice(0, title_arr.indexOf('gif')).join(' '));\n    return title_arr.slice(0, title_arr.indexOf('gif')).join(' ');\n  }\n  /*\r\n  * Sets layout and content to Main-Page state \r\n  */\n\n\n  setMainState() {\n    this.setState({\n      trending_visible: true,\n      main_content: [],\n      active_gif: null,\n      search_content: []\n    });\n    this.setRandoms(true, true);\n  }\n\n  render() {\n    console.log('this.state.active_title', this.state.active_title);\n    return React.createElement(\"div\", {\n      className: \"giphy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      setMainState: this.setMainState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(SearchBar, {\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(MainContent, {\n      setRandoms: this.setRandoms,\n      randoms: this.state.randoms,\n      api_key: this.state.api_key,\n      active_title: this.state.active_title,\n      handleSubmit: this.handleSubmit,\n      dimensions: this.props.dimensions,\n      search_content: this.state.search_content,\n      handleActiveGif: this.handleActiveGif,\n      active_gif: this.state.active_gif,\n      trending_visible: this.state.trending_visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Giphy;","map":{"version":3,"sources":["C:\\take-home-frontend\\src\\components\\Giphy.js"],"names":["React","Component","SearchBar","MainContent","Logo","Giphy","constructor","state","trending_visible","active_gif","search_content","randoms","active_title","api_key","handleSubmit","bind","setMainState","handleActiveGif","setRandoms","getRandom","randomWords","require","is_gif","is_new","random_word","path","fetch","mode","then","results","json","data","setState","str","componentWillMount","pic","titleToSearchable","title","toLowerCase","trim","console","log","slug","split","filter","test","length","username","join","title_arr","slice","indexOf","main_content","render","props","dimensions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport SearchBar from '../components/SearchBar'; \r\nimport MainContent from '../components/MainContent';\r\nimport Logo from '../components/Logo';\r\nimport '../stylesheets/Giphy.css';\r\n\r\n/*\r\n* Main Page of Giphy App \r\n*/\r\nclass Giphy extends Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\ttrending_visible: true,\r\n\t\t\tactive_gif: null,  \r\n\t\t\tsearch_content: [],\r\n\t\t\trandoms: [],\r\n\t\t\tactive_title: '',\r\n\t\t\tapi_key: 'ewnfHypctYT5Bn4nXkQpC9ebtdX9dDBG',\r\n\t\t}\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.setMainState = this.setMainState.bind(this);\r\n\t\tthis.handleActiveGif = this.handleActiveGif.bind(this);\r\n\t\tthis.setRandoms = this.setRandoms.bind(this);\r\n\t}\r\n\r\n\tgetRandom() {\r\n\t\tvar randomWords = require('random-words');\r\n\t\treturn randomWords();\r\n\t}\r\n\r\n\t/*\r\n\t*  Search Endpoint with random string and rating \r\n\t*/\r\n\tsetRandoms(is_gif, is_new) {\r\n\t\t/*\r\n\t\t* Selects a random word \r\n\t\t*/\r\n\t\tlet random_word = '';\r\n\t\tif (is_new === true) {\r\n\t\t\trandom_word = this.getRandom();\r\n\t\t}\r\n\t\tlet path = 'https://api.giphy.com/v1/';\r\n\t\t// console.log('this.state.is_gif', this.state.is_gif)\r\n\t\tif (is_gif === true) {\r\n\t\t\tpath += 'gifs';\r\n\t\t} else {\r\n\t\t\tpath+= 'stickers';\r\n\t\t}\r\n\t\tpath += '/search?api_key=' + this.state.api_key;\r\n\t\tpath += '&q=' + random_word;\r\n\t\t// path += '&rating=' + this.state.rating;\r\n\t\t// console.log('path', path)\r\n\t    fetch(path, {mode: 'cors'})\r\n\t\t.then(results =>{\r\n\t\t\treturn results.json();\r\n\t\t}).then(data=> {\r\n\t\t\tthis.setState({\r\n\t\t\t\tactive_title: random_word,\r\n\t\t\t\trandoms: data.data,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/*\r\n\t* Handle Submit for Search \r\n\t*/\r\n\thandleSubmit(str, is_gif) {\r\n\t\tconst api_key = this.state.api_key;\r\n\t\tlet path = 'https://api.giphy.com/v1/' \r\n\t\tif (is_gif === true) {\r\n\t\t\tpath += 'gifs'\r\n\t\t} else {\r\n\t\t\tpath += 'stickers'\r\n\t\t}\r\n\t\tpath += '/search?api_key=' + api_key + '&q=';\r\n\t    fetch(path + str)\r\n\t\t.then(results =>{\r\n\t\t\treturn results.json();\r\n\t\t}).then(data=> {\r\n\t\t\tthis.setState({\r\n\t\t\t\ttrending_visible: false,\r\n\t\t\t\tsearch_content: data.data,\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.setRandoms(true, true);\r\n\t}\r\n\r\n\t/*\r\n\t* Sets active_gif in Giphy to a GIF object \r\n\t*/\t\r\n\thandleActiveGif(pic) {\r\n\t\tthis.setState({\r\n\t\t\tactive_gif: pic,\r\n\t\t\tactive_title: this.titleToSearchable(pic),\r\n\t\t\ttrending_visible: false,\r\n\t\t});\r\n\t}\r\n\t/*\r\n\t* Convert Active Gif to a searchable Title \r\n\t*/\r\n\ttitleToSearchable(pic){\r\n\t\tlet title = pic.title.toLowerCase().trim();\r\n\t\tif (title === '') {\r\n\t\t\tconsole.log('slug')\r\n\t\t\tlet slug = pic.slug.toLowerCase().trim().split('-');\r\n\t\t\tslug = slug.filter(function(str){return !(/\\d/.test(str))})\r\n\t\t\tif (slug.length === 1) {\r\n\t\t\t\tconsole.log('username', pic.username);\r\n\t\t\t\treturn pic.username;\r\n\t\t\t}\r\n\t\t\tconsole.log('slug',slug.join(' '));\r\n\t\t\treturn slug.join(' ');\r\n\t\t}\r\n\t\tlet title_arr = title.split(\" \"); \r\n\t\tconsole.log('title', title_arr.slice(0, title_arr.indexOf('gif')).join(' '));\r\n\t\treturn title_arr.slice(0, title_arr.indexOf('gif')).join(' ');\r\n\t}\r\n\r\n\t/*\r\n\t* Sets layout and content to Main-Page state \r\n\t*/\r\n\tsetMainState() {\r\n\t\tthis.setState({\r\n\t\t\ttrending_visible: true,\r\n\t\t\tmain_content: [],\r\n\t\t\tactive_gif: null,\r\n\t\t\tsearch_content: [],\r\n\t\t});\r\n\t\tthis.setRandoms(true,true);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log('this.state.active_title', this.state.active_title)\r\n\t\treturn (\r\n\t\t\t<div className=\"giphy\">\r\n\t\t\t\t<Logo setMainState={this.setMainState}/>\r\n\t\t    \t<SearchBar handleSubmit={this.handleSubmit}/>\r\n\t\t    \t<MainContent setRandoms={this.setRandoms} randoms={this.state.randoms} api_key={this.state.api_key} active_title={this.state.active_title} handleSubmit={this.handleSubmit} dimensions={this.props.dimensions} search_content={this.state.search_content} handleActiveGif={this.handleActiveGif} active_gif={this.state.active_gif} trending_visible={this.state.trending_visible}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Giphy;\r\n"]},"metadata":{},"sourceType":"module"}