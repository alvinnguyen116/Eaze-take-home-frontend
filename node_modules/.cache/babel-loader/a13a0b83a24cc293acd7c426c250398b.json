{"ast":null,"code":"var _jsxFileName = \"C:\\\\take-home-frontend\\\\src\\\\components\\\\GifRandom.js\";\nimport React, { Component } from 'react';\nimport ExpandableGif from '../components/ExpandableGif';\nimport '../stylesheets/GifRandom.css';\n/*\r\n* \r\n*/\n\nclass GifRandom extends Component {\n  constructor() {\n    super();\n    this.state = {\n      randoms: [],\n      stickers: [],\n      rating: 'r',\n      is_gif: true,\n      rotate: 0\n    };\n    this.random_word = '';\n    this.setRating = this.setRating.bind(this);\n  }\n\n  getRandom() {\n    var randomWords = require('random-words');\n\n    return randomWords();\n  }\n\n  componentWillMount() {\n    this.setRandoms(true, true);\n  }\n  /*\r\n  *  Search Endpoint with random string and rating \r\n  */\n\n\n  setRandoms(is_gif, is_new) {\n    /*\r\n    * Selects a random word \r\n    */\n    if (is_new === true) {\n      this.random_word = this.getRandom();\n    }\n\n    let path = 'https://api.giphy.com/v1/';\n    console.log('this.state.is_gif', this.state.is_gif);\n\n    if (is_gif === true) {\n      path += 'gifs';\n    } else {\n      path += 'stickers';\n    }\n\n    path += '/search?api_key=' + this.props.api_key;\n    path += '&q=' + this.random_word;\n    path += '&rating=' + this.state.rating;\n    console.log('path', path);\n    fetch(path, {\n      mode: 'cors'\n    }).then(results => {\n      return results.json();\n    }).then(data => {\n      this.setState({\n        randoms: data.data\n      });\n    });\n  }\n\n  renderRandomButton() {\n    const className = 'rotate-' + this.state.rotate % 360;\n    return React.createElement(\"svg\", {\n      className: \"GIF-SVG random-svg \" + className,\n      onClick: () => {\n        this.setState({\n          rotate: this.state.rotate + 90\n        });\n        this.setRandoms(this.state.is_gif, true);\n      },\n      viewBox: \"0 0 512 512\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      className: \"circle\",\n      d: \"m256 512c-140.609375 0-256-115.390625-256-256s115.390625-256 256-256 256 115.390625 256 256-115.390625 256-256 256zm0 0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      className: \"circle\",\n      d: \"m512 256c0-140.609375-115.390625-256-256-256v512c140.609375 0 256-115.390625 256-256zm0 0\",\n      fill: \"#c6e2e7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      className: \"arrow\",\n      d: \"m376 166-60 90h30c0 24.039062-9.359375 46.640625-26.351562 63.648438-17.007813 16.992187-39.609376 26.351562-63.648438 26.351562-14.589844 0-28.652344-3.449219-41.253906-9.960938l-33.394532 50.097657c21.984376 12.636719 47.472657 19.863281 74.648438 19.863281 41.421875 0 78.921875-16.789062 106.066406-43.933594 27.144532-27.144531 43.933594-64.644531 43.933594-106.066406h31zm0 0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      className: \"arrow\",\n      d: \"m362.066406 362.066406c27.144532-27.144531 43.933594-64.644531 43.933594-106.066406h31l-61-90-60 90h30c0 24.039062-9.359375 46.640625-26.351562 63.648438-17.007813 16.992187-39.609376 26.351562-63.648438 26.351562v60c41.421875 0 78.921875-16.789062 106.066406-43.933594zm0 0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      className: \"arrow\",\n      d: \"m256 106c-41.421875 0-78.921875 16.789062-106.066406 43.933594-27.144532 27.144531-43.933594 64.644531-43.933594 106.066406h-30l60 90 60-90h-30c0-24.039062 9.359375-46.640625 26.351562-63.648438 17.007813-16.992187 39.609376-26.351562 63.648438-26.351562 14.589844 0 28.652344 3.449219 41.253906 9.957031l33.394532-50.09375c-21.984376-12.636719-47.472657-19.863281-74.648438-19.863281zm0 0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      className: \"arrow\",\n      d: \"m297.253906 175.957031 33.394532-50.09375c-21.984376-12.636719-47.472657-19.863281-74.648438-19.863281v60c14.589844 0 28.652344 3.449219 41.253906 9.957031zm0 0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n  randomsToExpandable() {\n    return this.state.randoms.map(pic => {\n      return React.createElement(ExpandableGif, {\n        key: pic.id,\n        height_is_fixed: false,\n        handleShareButton: this.props.handleShareButton,\n        pic: pic,\n        handleActiveGif: this.props.handleActiveGif,\n        handleInfoButton: this.props.handleInfoButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      });\n    });\n  }\n\n  setGif(boolean) {\n    this.setState({\n      is_gif: boolean\n    });\n  }\n  /*\r\n  * As of 4/27, rating parameter is broken \r\n  * Reimplement when Giphy fixes the issue \r\n  */\n\n\n  setRating(event) {\n    const rating = event.target.value;\n    const api_key = this.props.api_key;\n    const path = 'https://api.giphy.com/v1/gifs/search?api_key=' + api_key + '&q=' + this.random_word + '&rating=' + rating;\n    fetch(path, {\n      mode: 'cors'\n    }).then(results => {\n      return results.json();\n    }).then(data => {\n      this.setState({\n        rating: rating,\n        randoms: data.data\n      });\n    });\n  }\n  /*\r\n  * As of 4/27, rating parameter is broken \r\n  * Reimplement when Giphy fixes the issue \r\n  */\n\n\n  renderRatingSelect() {\n    return React.createElement(\"form\", {\n      className: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: this.setRating,\n      value: this.state.rating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"G\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, 'G'), React.createElement(\"option\", {\n      value: \"PG-13\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, 'PG-13'), React.createElement(\"option\", {\n      value: \"R\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, 'R')));\n  }\n\n  render() {\n    if (this.props.active_gif !== null) {\n      return null;\n    }\n\n    console.log(this.state.rating);\n    const style = {\n      transform: this.state.is_gif ? 'translateX(0)' : 'translateX(52px)',\n      width: this.state.is_gif ? '51px' : '86px'\n    };\n    return React.createElement(\"div\", {\n      className: \"gif-random\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"GIF-TITLE flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, 'random word'), this.renderRandomButton(), React.createElement(\"div\", {\n      className: \"random-word\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.random_word)), React.createElement(\"h1\", {\n      className: \"GIF-TITLE flex relative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"trending-btn\",\n      onClick: () => {\n        this.setGif(true);\n        this.setRandoms(true, false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Gifs\"), React.createElement(\"div\", {\n      className: \"favorite-btn\",\n      onClick: () => {\n        this.setGif(false);\n        this.setRandoms(false, false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Stickers\"), React.createElement(\"div\", {\n      className: \"animated-ellipse\",\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"random-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.randomsToExpandable()));\n  }\n\n}\n\nexport default GifRandom;","map":{"version":3,"sources":["C:\\take-home-frontend\\src\\components\\GifRandom.js"],"names":["React","Component","ExpandableGif","GifRandom","constructor","state","randoms","stickers","rating","is_gif","rotate","random_word","setRating","bind","getRandom","randomWords","require","componentWillMount","setRandoms","is_new","path","console","log","props","api_key","fetch","mode","then","results","json","data","setState","renderRandomButton","className","randomsToExpandable","map","pic","id","handleShareButton","handleActiveGif","handleInfoButton","setGif","boolean","event","target","value","renderRatingSelect","render","active_gif","style","transform","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ExpandableGif from '../components/ExpandableGif';\r\nimport '../stylesheets/GifRandom.css';\r\n\r\n/*\r\n* \r\n*/\r\nclass GifRandom extends Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\trandoms: [],\r\n\t\t\tstickers: [],\r\n\t\t\trating: 'r',\r\n\t\t\tis_gif: true,\r\n\t\t\trotate: 0,\r\n\t\t}\r\n\t\tthis.random_word = '';\r\n\t\tthis.setRating = this.setRating.bind(this);\r\n\t}\r\n\r\n\t\r\n\r\n\r\n\tgetRandom() {\r\n\t\tvar randomWords = require('random-words');\r\n\t\treturn randomWords();\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.setRandoms(true, true);\r\n\t}\r\n\r\n\t/*\r\n\t*  Search Endpoint with random string and rating \r\n\t*/\r\n\tsetRandoms(is_gif, is_new) {\r\n\t\t/*\r\n\t\t* Selects a random word \r\n\t\t*/\r\n\t\tif (is_new === true) {\r\n\t\t\tthis.random_word = this.getRandom();\r\n\t\t}\r\n\t\tlet path = 'https://api.giphy.com/v1/';\r\n\t\tconsole.log('this.state.is_gif', this.state.is_gif)\r\n\t\tif (is_gif === true) {\r\n\t\t\tpath += 'gifs';\r\n\t\t} else {\r\n\t\t\tpath+= 'stickers';\r\n\t\t}\r\n\t\tpath += '/search?api_key=' + this.props.api_key;\r\n\t\tpath += '&q=' + this.random_word;\r\n\t\tpath += '&rating=' + this.state.rating;\r\n\t\tconsole.log('path', path)\r\n\t    fetch(path, {mode: 'cors'})\r\n\t\t.then(results =>{\r\n\t\t\treturn results.json();\r\n\t\t}).then(data=> {\r\n\t\t\tthis.setState({\r\n\t\t\t\trandoms: data.data,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\trenderRandomButton(){\r\n\t\tconst className = 'rotate-'+ (this.state.rotate % 360);\r\n\t\treturn (\r\n\t\t\t<svg className={\"GIF-SVG random-svg \" + className} onClick={()=>{this.setState({rotate: this.state.rotate + 90}); this.setRandoms(this.state.is_gif, true);}} viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t<path className=\"circle\" d=\"m256 512c-140.609375 0-256-115.390625-256-256s115.390625-256 256-256 256 115.390625 256 256-115.390625 256-256 256zm0 0\"/>\r\n\t\t\t\t<path className=\"circle\" d=\"m512 256c0-140.609375-115.390625-256-256-256v512c140.609375 0 256-115.390625 256-256zm0 0\" fill=\"#c6e2e7\"/>\r\n\t\t\t\t<path className=\"arrow\" d=\"m376 166-60 90h30c0 24.039062-9.359375 46.640625-26.351562 63.648438-17.007813 16.992187-39.609376 26.351562-63.648438 26.351562-14.589844 0-28.652344-3.449219-41.253906-9.960938l-33.394532 50.097657c21.984376 12.636719 47.472657 19.863281 74.648438 19.863281 41.421875 0 78.921875-16.789062 106.066406-43.933594 27.144532-27.144531 43.933594-64.644531 43.933594-106.066406h31zm0 0\" />\r\n\t\t\t\t<path className=\"arrow\" d=\"m362.066406 362.066406c27.144532-27.144531 43.933594-64.644531 43.933594-106.066406h31l-61-90-60 90h30c0 24.039062-9.359375 46.640625-26.351562 63.648438-17.007813 16.992187-39.609376 26.351562-63.648438 26.351562v60c41.421875 0 78.921875-16.789062 106.066406-43.933594zm0 0\" />\r\n\t\t\t\t<path className=\"arrow\" d=\"m256 106c-41.421875 0-78.921875 16.789062-106.066406 43.933594-27.144532 27.144531-43.933594 64.644531-43.933594 106.066406h-30l60 90 60-90h-30c0-24.039062 9.359375-46.640625 26.351562-63.648438 17.007813-16.992187 39.609376-26.351562 63.648438-26.351562 14.589844 0 28.652344 3.449219 41.253906 9.957031l33.394532-50.09375c-21.984376-12.636719-47.472657-19.863281-74.648438-19.863281zm0 0\" />\r\n\t\t\t\t<path className=\"arrow\" d=\"m297.253906 175.957031 33.394532-50.09375c-21.984376-12.636719-47.472657-19.863281-74.648438-19.863281v60c14.589844 0 28.652344 3.449219 41.253906 9.957031zm0 0\" />\r\n\t\t\t</svg>\r\n\t\t);\r\n\t}\r\n\r\n\trandomsToExpandable(){\r\n\t\treturn this.state.randoms.map((pic)=>{\r\n\t\t\treturn (<ExpandableGif key={pic.id} height_is_fixed={false} handleShareButton={this.props.handleShareButton} pic={pic} handleActiveGif={this.props.handleActiveGif} handleInfoButton={this.props.handleInfoButton}/>);\r\n\t\t});\r\n\t}\r\n\r\n\tsetGif(boolean) {\r\n\t\tthis.setState({\r\n\t\t\tis_gif: boolean,\r\n\t\t});\r\n\t}\r\n\r\n\t/*\r\n\t* As of 4/27, rating parameter is broken \r\n\t* Reimplement when Giphy fixes the issue \r\n\t*/\r\n\tsetRating(event) {\r\n\t\tconst rating = event.target.value;\r\n\t\tconst api_key = this.props.api_key;\r\n\t\tconst path = 'https://api.giphy.com/v1/gifs/search?api_key=' + api_key + '&q=' + this.random_word +'&rating=' + rating;\r\n\t    fetch(path, {mode: 'cors'})\r\n\t\t.then(results =>{\r\n\t\t\treturn results.json();\r\n\t\t}).then(data=> {\r\n\t\t\tthis.setState({\r\n\t\t\t\trating: rating,\r\n\t\t\t\trandoms: data.data,\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n\t* As of 4/27, rating parameter is broken \r\n\t* Reimplement when Giphy fixes the issue \r\n\t*/\r\n\trenderRatingSelect() {\r\n\t\treturn(\r\n\t\t\t<form className=\"rating\">\r\n\t\t\t\t<select className=\"form-control\" onChange={this.setRating} value={this.state.rating}>\r\n\t\t\t\t\t<option value=\"G\">{'G'}</option>\r\n\t\t\t\t\t<option value=\"PG-13\">{'PG-13'}</option>\r\n\t\t\t\t\t<option value=\"R\">{'R'}</option>\r\n\t\t\t\t</select>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.props.active_gif !== null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconsole.log(this.state.rating);\r\n\t\tconst style = {\r\n\t\t\ttransform: this.state.is_gif ? 'translateX(0)': 'translateX(52px)',\r\n\t\t\twidth: this.state.is_gif ? '51px' : '86px',\r\n\t\t}; \r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"gif-random\">\r\n\t\t\t\t<div className=\"title-container\">\r\n\t\t\t\t\t<h1 className='GIF-TITLE flex'>\r\n\t\t\t\t\t\t<div>{'random word'}</div>\r\n\t\t\t\t\t\t{this.renderRandomButton()}\r\n\t\t\t\t\t\t<div className='random-word'>{this.random_word}</div>\r\n\t\t\t\t\t</h1> \r\n\t\t\t\t\t<h1 className=\"GIF-TITLE flex relative\">\r\n\t\t\t\t\t\t<div className=\"trending-btn\" onClick={()=>{this.setGif(true); this.setRandoms(true, false);}}>Gifs</div>\r\n\t\t\t\t\t\t<div className=\"favorite-btn\" onClick={()=>{this.setGif(false); this.setRandoms(false, false);}}>Stickers</div>\r\n\t\t\t\t\t\t<div className=\"animated-ellipse\" style={style}></div>\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"random-container\">{this.randomsToExpandable()}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GifRandom;\r\n"]},"metadata":{},"sourceType":"module"}