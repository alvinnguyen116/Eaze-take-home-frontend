{"ast":null,"code":"var _jsxFileName = \"C:\\\\take-home-frontend\\\\src\\\\components\\\\GifPanels.js\";\nimport React, { Component, Fragment } from 'react';\n\nclass GifPanels extends Component {\n  renderSharePanel() {\n    const url = this.props.pic.url;\n    const bitly_url = this.props.pic.bitly_url;\n    const embed_url = this.props.pic.embed_url;\n    const source = this.props.pic.source;\n    const source_post_url = this.props.pic.source_post_url;\n    const style = {\n      opacity: this.props.share_is_off ? 1 : 0\n    };\n    return React.createElement(\"div\", {\n      className: \"share-box panel\",\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, 'Original'), React.createElement(\"a\", {\n      href: bitly_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, 'Bitly'), React.createElement(\"a\", {\n      href: embed_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, 'Embed'), React.createElement(\"a\", {\n      href: source,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, 'Source'), React.createElement(\"a\", {\n      href: source_post_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, 'Source Post'));\n  }\n\n  renderInfoPanel() {\n    const username = this.props.pic.username;\n    const rating = this.props.pic.rating;\n    let import_datetime = this.props.pic.import_datetime;\n    const width = this.props.pic.images[this.props.format].width;\n    const height = this.props.pic.images[this.props.format].height;\n    import_datetime = import_datetime ? import_datetime.slice(5, 7) + \"/\" + import_datetime.slice(8, 10) + \"/\" + import_datetime.slice(0, 4) : 'N/A';\n    let source = 'URL';\n\n    if (this.props.pic.images[format].url === undefined) {\n      source = 'MP4';\n    }\n\n    const style = {\n      opacity: this.props.btn_is_x ? 1 : 0\n    };\n    return React.createElement(\"div\", {\n      className: \"info-box panel\",\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, 'Owner: ' + (username ? username : 'N/A')), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, 'Rating: ' + rating.toUpperCase()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, 'Dimension: ' + width + ' x ' + height + ' px'), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, 'Uploaded: ' + import_datetime), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, 'Type: ' + source));\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.renderInfoPanel(), this.renderSharePanel());\n  }\n\n}\n\nexport default GifPanels;","map":{"version":3,"sources":["C:\\take-home-frontend\\src\\components\\GifPanels.js"],"names":["React","Component","Fragment","GifPanels","renderSharePanel","url","props","pic","bitly_url","embed_url","source","source_post_url","style","opacity","share_is_off","renderInfoPanel","username","rating","import_datetime","width","images","format","height","slice","undefined","btn_is_x","toUpperCase","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\n\r\nclass GifPanels extends Component {\r\n\r\n\trenderSharePanel() {\r\n\t\tconst {url} = this.props.pic;\r\n\t\tconst {bitly_url} = this.props.pic;\r\n\t\tconst {embed_url} = this.props.pic;\r\n\t\tconst {source} = this.props.pic;\r\n\t\tconst {source_post_url} = this.props.pic;\r\n\t\tconst style = {\r\n\t\t\topacity: this.props.share_is_off ? 1 : 0,\r\n\t\t}\r\n\r\n\t\treturn (<div className=\"share-box panel\" style={style}>\r\n\t\t\t\t\t<a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{'Original'}</a>\r\n\t\t\t\t\t<a href={bitly_url} target=\"_blank\" rel=\"noopener noreferrer\">{'Bitly'}</a>\r\n\t\t\t\t\t<a href={embed_url} target=\"_blank\" rel=\"noopener noreferrer\">{'Embed'}</a>\r\n\t\t\t\t\t<a href={source} target=\"_blank\" rel=\"noopener noreferrer\">{'Source'}</a>\r\n\t\t\t\t\t<a href={source_post_url} target=\"_blank\"  rel=\"noopener noreferrer\">{'Source Post'}</a>\r\n\t\t\t\t</div>); \r\n\t}\r\n\r\n\trenderInfoPanel() {\r\n\t\tconst {username} = this.props.pic;\r\n\t\tconst {rating} = this.props.pic;\r\n\t\tlet {import_datetime} = this.props.pic;\r\n\t\tconst {width} = this.props.pic.images[this.props.format];\r\n\t\tconst {height} = this.props.pic.images[this.props.format];\r\n\t\timport_datetime = (import_datetime ? import_datetime.slice(5,7)  + \"/\" + import_datetime.slice(8,10) + \"/\" + import_datetime.slice(0,4) : 'N/A');\r\n\t\tlet source = 'URL'; \r\n\t\tif (this.props.pic.images[format].url === undefined) {\r\n\t\t\tsource = 'MP4';\r\n\t\t}\r\n\t\tconst style = {\r\n\t\t\topacity: this.props.btn_is_x ? 1 : 0,\r\n\t\t}\r\n\t\treturn (<div className=\"info-box panel\" style={style}>\r\n\t\t\t\t\t<div>{'Owner: ' + (username ? username : 'N/A')}</div>\r\n\t\t\t\t\t<div>{'Rating: ' + rating.toUpperCase()}</div>\r\n\t\t\t\t\t<div>{'Dimension: ' + width +' x ' + height + ' px'}</div>\r\n\t\t\t\t\t<div>{'Uploaded: ' + import_datetime}</div>\r\n\t\t\t\t\t<div>{'Type: ' + source}</div>\t\t\t\t\t\t\t\r\n\t\t\t\t</div>);\r\n\t}\r\n\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t  <Fragment>\r\n\t\t  \t{this.renderInfoPanel()}\r\n\t\t  \t{this.renderSharePanel()}\r\n\t\t  </Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GifPanels;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}